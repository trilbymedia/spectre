// Mixins

// Strip Units
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

// Avatar mixin
@mixin avatar-base($size: $unit-8) {
  font-size: $size / 2.2;
  height: $size;
  width: $size;
}

// Clearfix mixin
@mixin clearfix() {
  &::after {
    clear: both;
    content: "";
    display: table;
  }
}

// Component focus shadow
@mixin control-shadow($color: $primary-color) {
  box-shadow: 0 0 0 .1rem rgba($color, .2);
}

// Component transition
@mixin control-transition() {
  transition: all .2s ease;
}

// Toast variant
@mixin toast-variant($color: $dark-color) {
  background: rgba($color, .9);
  border-color: $color;
}

// Label base style
@mixin label-base() {
  border-radius: $border-radius;
  display: inline-block;
  line-height: 1.2;
  padding: .1em .3em;
  vertical-align: baseline;
}

@mixin label-variant($color: $light-color, $bg-color: $primary-color) {
  background: $bg-color;
  color: $color;
}

// Shadow mixin
@mixin shadow-variant($offset) {
  box-shadow: 0 $offset ($offset + .05rem) * 2 rgba($dark-color, .3);
}

// Position utility mixin
@mixin margin-variant($id: 1, $size: 1) {
  .m-#{$id} {
    margin: $size;
  }
  .mb-#{$id} {
    margin-bottom: $size;
  }
  .ml-#{$id} {
    margin-left: $size;
  }
  .mr-#{$id} {
    margin-right: $size;
  }
  .mt-#{$id} {
    margin-top: $size;
  }
  .mx-#{$id} {
    margin-left: $size;
    margin-right: $size;
  }
  .my-#{$id} {
    margin-bottom: $size;
    margin-top: $size;
  }
}

@mixin padding-variant($id: 1, $size: 1) {
  .p-#{$id} {
    padding: $size;
  }
  .pb-#{$id} {
    padding-bottom: $size;
  }
  .pl-#{$id} {
    padding-left: $size;
  }
  .pr-#{$id} {
    padding-right: $size;
  }
  .pt-#{$id} {
    padding-top: $size;
  }
  .px-#{$id} {
    padding-left: $size;
    padding-right: $size;
  }
  .py-#{$id} {
    padding-bottom: $size;
    padding-top: $size;
  }
}

// Colors mixin
@mixin text-color-variant($color: $primary-color) {
  color: $color;

  a#{&} {
    &:focus,
    &:hover {
      color: darken($color, 5%);
    }
  }
}

@mixin bg-color-variant($color: $primary-color) {
  background: $color;
}